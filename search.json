[{"path":"index.html","id":"欢迎","chapter":"欢迎","heading":"欢迎","text":"欢迎使用Molo Pipeline!针对上述问题，我们研发的Molo Pipeline平台构建了标准化空间多组学分析体系。该平台通过可视化交互界面集成数据预处理、基础分析、可视化呈现全流程，有效降低分析技术门槛。其核心优势在于突破性的数据兼容能力——Molo分析对象可无损转换为Seurat、CellChat、SpatialFeatureExperiment、CDS(monocle-v3)、anndata(Scanpy/Squidpy)等格式，实现跨平台数据的无损衔接与自由迁移。这种特性既满足初学者的基础分析需求，也为专业人员开展多维度探索性研究提供灵活的技术支撑。在深度学习整合方面，Molo Pipeline创新性地实现与PyTorch框架的系统对接。平台内置的智能数据整合算法在公开数据集验证中展现出显著优势，其空间对齐精度与批次效应校正效果均优于现有主流算法。通过精心设计的R-PyTorch接口封装，用户可便捷调用前沿神经网络框架进行深度分析，同时保持与现有R语言分析流程的无缝衔接。我们期待Molo Pipeline凭借其技术突破与创新设计，为空间多组学领域的研究者提供更高效、更灵活的分析工具，助力相关研究取得突破性进展。","code":""},{"path":"介绍.html","id":"介绍","chapter":"1 介绍","heading":"1 介绍","text":"","code":""},{"path":"介绍.html","id":"主要特性和优点","chapter":"1 介绍","heading":"1.1 主要特性和优点","text":"Molo Pipeline 致力于构建标准化空间多组学分析范式，通过集成化分析框架实现从数据预处理、基础分析到可视化呈现的全流程覆盖。其智能化操作界面与优化算法显著提升分析效率与结果可重复性，有效降低对编程基础与工具学习成本的要求。Molo Pipeline的核心特性和技术优势体现为：简易性：免配置环境与编程学习，核心分析功能封装为单行命令，支持零代码交互式操作；高效性：采用并行化计算框架与智能化资源分配策略，实现超线性时间复杂度的数据处理；精确性：集成经同行评审的权威算法框架，建立全流程质量控制系统保障结果生物学意义；自动化：构建标准化分析路径，全流程批处理系统支持一键式生成可发表级分析报告；完备性：全面覆盖空间转录组、蛋白组等多模态数据分析需求，持续更新前沿分析方法；兼容性：建立标准化数据接口体系，支持与Seurat、Scanpy(anndata)、Voyager、CellChat、Monocle3(CDS)等平台对象的无损转换；扩展性：基于模块化架构设计，支持自定义分析流程与算法插件开发，创新性实现R语言生态与PyTorch框架的深度耦合；可视化：预置Nature/Cell级可视化模板库，自动生成多维动态交互图表，满足从数据探索到出版级制图的全阶段需求。","code":""},{"path":"介绍.html","id":"支持数据类型","chapter":"1 介绍","heading":"1.2 支持数据类型","text":"Molo Pipeline目前支持以下数据类型：10X Visium10X XeniumVizgen MERFISHNanostring CosMxSlide-seq v2spATAC-seqCODEXStereo-seq自定义分析（Custom）","code":""},{"path":"安装.html","id":"安装","chapter":"2 安装","heading":"2 安装","text":"","code":""},{"path":"安装.html","id":"软硬件要求","chapter":"2 安装","heading":"2.1 软硬件要求","text":"硬件需求:GPU: NVIDIA GPU（可选）内存: 至少 8GB (建议 32GB 以上)硬盘空间: 至少 20GB 可用空间软件需求:DockerTip: 由于 Molo Pipeline 功能较丰富，为避免用户自行安装时出现依赖包冲突，我们以 Docker 镜像的方式提供了验证可靠的 conda 环境，其中含有 Molo 包本体以及所有的依赖包，一键安装后无需额外安装任何包。请您从该链接中下载预配置的 Docker 镜像。","code":""},{"path":"安装.html","id":"安装步骤","chapter":"2 安装","heading":"2.2 安装步骤","text":"使用docker pull拉取molo镜像并启动即可使用。","code":""},{"path":"molo-函数.html","id":"molo-函数","chapter":"3 Molo 函数","heading":"3 Molo 函数","text":"在本节中，我们将详细介绍Molo包中的各函数的功能和对应的参数设置。","code":""},{"path":"molo-函数.html","id":"molo_create","chapter":"3 Molo 函数","heading":"3.1 Molo_Create","text":"","code":""},{"path":"molo-函数.html","id":"功能","chapter":"3 Molo 函数","heading":"3.1.1 功能","text":"从标准格式的原始数据文件创建Molo对象。","code":""},{"path":"molo-函数.html","id":"参数及含义","chapter":"3 Molo 函数","heading":"3.1.2 参数及含义","text":"data_type：平台类型（如 \"Visium\"，默认值）folder_path：包含输入文件的目录路径（默认当前目录 \"./\"）n_cells：可选参数，指定子集化的细胞数量（默认不限制）n_features：可选参数，指定特征选择数量（默认不限制）ATAC_dataset：ATAC-seq参考基因组物种（可选 \"mouse\" 或 \"human\"，默认 \"mouse\"）CODEX_type：多重成像平台类型（默认 \"processor\"）softmax：是否应用softmax标准化（逻辑值，默认 FALSE）custom_index：自定义索引列标识符（默认 \"__index_level_0__\"）","code":""},{"path":"molo-函数.html","id":"返回值","chapter":"3 Molo 函数","heading":"3.1.3 返回值","text":"构造完成的Molo对象。","code":""},{"path":"molo-函数.html","id":"基础示例","chapter":"3 Molo 函数","heading":"3.1.4 基础示例","text":"","code":"\nmolo_obj <- Molo_Create(data_type = \"Visium\", \n                        folder_path = \"./Visium/\",\n                        n_cells = 2000, \n                        n_features = 3000)"},{"path":"molo-函数.html","id":"molo_reduction_cluster","chapter":"3 Molo 函数","heading":"3.2 Molo_reduction_cluster","text":"","code":""},{"path":"molo-函数.html","id":"功能-1","chapter":"3 Molo 函数","heading":"3.2.1 功能","text":"对Molo对象执行降维与聚类分析。","code":""},{"path":"molo-函数.html","id":"参数及含义-1","chapter":"3 Molo 函数","heading":"3.2.2 参数及含义","text":"obj：输入的Molo对象only_QC：是否仅执行质量控制过滤步骤（逻辑值）nFeature_range：有效基因数范围（向量格式，如 c(200, 2500)）nCount_range：有效UMI数范围（向量格式，如 c(500, 15000)）molo_env：运行时配置参数（环境变量对象）labeled_ref：参考标注数据集的文件路径（推荐使用rds格式的seurat对象）molo_plot_path：结果图像输出目录路径（默认根据环境变量生成）save_type：结果保存格式（如静态图像\"png\"/交互式图像\"echarts\"）run_Banksy：是否启用Banksy空间聚类（逻辑值）image_alpha：空间图像透明度（数值范围0-1）pt_size：可视化点大小（数值，默认根据数据规模自动调整）atac_steps：ATAC-seq数据处理流程步骤标识符（字符向量）show_progress：是否显示进度信息（逻辑值）","code":""},{"path":"molo-函数.html","id":"返回值-1","chapter":"3 Molo 函数","heading":"3.2.3 返回值","text":"包含降维嵌入结果和聚类标签的Molo对象。","code":""},{"path":"molo-函数.html","id":"基础示例-1","chapter":"3 Molo 函数","heading":"3.2.4 基础示例","text":"","code":"\nmolo_obj <- Molo_reduction_cluster(obj = molo_obj,\n                                   only_QC = FALSE,\n                                   nFeature_range = c(200, 2500),\n                                   nCount_range = c(500, 15000),\n                                   molo_plot_path = \"./plots/\")"},{"path":"molo-函数.html","id":"molo_var_features","chapter":"3 Molo 函数","heading":"3.3 Molo_var_features","text":"","code":""},{"path":"molo-函数.html","id":"功能-2","chapter":"3 Molo 函数","heading":"3.3.1 功能","text":"识别Molo对象中的空间可变特征和标记基因。","code":""},{"path":"molo-函数.html","id":"参数及含义-2","chapter":"3 Molo 函数","heading":"3.3.2 参数及含义","text":"obj：输入的Molo对象features：预定义分析特征集合（可选，默认分析全部特征）sp_var_features：需筛选的顶级空间可变特征数量（数值）molo_plot_path：可视化结果存储目录（默认根据环境变量生成）save_type：输出图像文件格式（如静态图像\"png\"/交互式图像\"echarts\"）font_size：可视化图表文字大小（数值，默认 12）image_alpha：空间图层透明度（数值范围 0-1，默认 0.6）pt_size：特征表达点的可视化尺寸（数值，默认 1.0）show_progress：是否显示处理进度（逻辑值，默认 TRUE）","code":""},{"path":"molo-函数.html","id":"返回值-2","chapter":"3 Molo 函数","heading":"3.3.3 返回值","text":"包含空间可变特征分析结果的Molo对象。","code":""},{"path":"molo-函数.html","id":"基础示例-2","chapter":"3 Molo 函数","heading":"3.3.4 基础示例","text":"","code":"\nmolo_obj <- Molo_var_features(obj = molo_obj,\n                              sp_var_features = 20,\n                              molo_plot_path = \"./plots/\")"},{"path":"molo-函数.html","id":"molo_top_go_terms","chapter":"3 Molo 函数","heading":"3.4 Molo_top_GO_terms","text":"","code":""},{"path":"molo-函数.html","id":"功能-3","chapter":"3 Molo 函数","heading":"3.4.1 功能","text":"执行GO富集分析并可视化各聚类核心通路。","code":""},{"path":"molo-函数.html","id":"参数及含义-3","chapter":"3 Molo 函数","heading":"3.4.2 参数及含义","text":"obj：包含聚类注释的Molo对象dataset：基因注释的物种数据库（可选 \"mouse\" 或 \"human\"）plot_cols：可视化自定义调色板（可选，默认使用内置配色）molo_plot_path：GO结果图像存储目录路径（默认根据环境变量生成）font_size：可视化图表标签文字大小（数值，默认 12）show_progress：是否显示处理进度（逻辑值，默认 TRUE）","code":""},{"path":"molo-函数.html","id":"返回值-3","chapter":"3 Molo 函数","heading":"3.4.3 返回值","text":"包含GO富集分析结果的Molo对象。","code":""},{"path":"molo-函数.html","id":"基础示例-3","chapter":"3 Molo 函数","heading":"3.4.4 基础示例","text":"","code":"\nmolo_obj <- Molo_top_GO_terms(obj = molo_obj,\n                              dataset = \"mouse\",\n                              molo_plot_path = \"./plots/\")"},{"path":"molo-函数.html","id":"molo_cell_chat","chapter":"3 Molo 函数","heading":"3.5 Molo_cell_chat","text":"","code":""},{"path":"molo-函数.html","id":"功能-4","chapter":"3 Molo 函数","heading":"3.5.1 功能","text":"使用CellChat进行细胞间通讯分析。","code":""},{"path":"molo-函数.html","id":"参数及含义-4","chapter":"3 Molo 函数","heading":"3.5.2 参数及含义","text":"obj：包含细胞类型注释的Molo对象plot_cols：细胞群组的自定义颜色映射（可选，默认使用内置配色）dataset：配体-受体对的物种数据库（可选 \"mouse\" 或 \"human\"）molo_plot_path：细胞通讯分析结果图像输出目录路径（默认根据环境变量生成）font_size：可视化图表标签文字大小（数值，默认 12）show_progress：是否显示处理进度（逻辑值，默认 TRUE）","code":""},{"path":"molo-函数.html","id":"返回值-4","chapter":"3 Molo 函数","heading":"3.5.3 返回值","text":"包含CellChat分析结果的Molo对象。","code":""},{"path":"molo-函数.html","id":"基础示例-4","chapter":"3 Molo 函数","heading":"3.5.4 基础示例","text":"","code":"\nmolo_obj <- Molo_cell_chat(obj = molo_obj,\n                           dataset = \"mouse\",\n                           molo_plot_path = \"./plots/\")"},{"path":"molo-函数.html","id":"molo_traj","chapter":"3 Molo 函数","heading":"3.6 Molo_traj","text":"","code":""},{"path":"molo-函数.html","id":"功能-5","chapter":"3 Molo 函数","heading":"3.6.1 功能","text":"使用Monocle3进行细胞轨迹推断。","code":""},{"path":"molo-函数.html","id":"参数及含义-5","chapter":"3 Molo 函数","heading":"3.6.2 参数及含义","text":"obj：包含降维结果的Molo对象plot_cols：轨迹自定义颜色映射（可选，默认使用内置配色）molo_plot_path：轨迹分析结果图像存储目录路径（默认根据环境变量生成）show_progress：是否显示处理进度（逻辑值，默认 TRUE）","code":""},{"path":"molo-函数.html","id":"返回值-5","chapter":"3 Molo 函数","heading":"3.6.3 返回值","text":"包含轨迹推断元数据的Molo对象。","code":""},{"path":"molo-函数.html","id":"基础示例-5","chapter":"3 Molo 函数","heading":"3.6.4 基础示例","text":"","code":"\nmolo_obj <- Molo_traj(obj = molo_obj, molo_plot_path = \"./plots/\")"},{"path":"molo-函数.html","id":"molo_integrate","chapter":"3 Molo 函数","heading":"3.7 Molo_Integrate","text":"","code":""},{"path":"molo-函数.html","id":"功能-6","chapter":"3 Molo 函数","heading":"3.7.1 功能","text":"使用Molo框架进行空间数据整合。","code":""},{"path":"molo-函数.html","id":"参数及含义-6","chapter":"3 Molo 函数","heading":"3.7.2 参数及含义","text":"obj_list：输入Molo对象的列表var_features：高变特征筛选数量（整数，默认 3000）py_path：Python解释器可执行文件路径（默认 \"home/user/anaconda3/envs/Molo/bin/python\"）device：模型训练计算设备（可选 \"cuda:0\"/\"cpu\"，默认 \"cuda:0\"）save_path：整合结果存储目录路径（默认 \"./molo_save/\"）pretrain_epoch：预训练迭代次数（整数，默认 100）train_epoch：主训练迭代次数（整数，默认 300）tmp：中间文件临时存储目录（默认 \"./_molo_tmp/\"）edge：边构建策略（字符，默认 \"together\"）sp_alignment：空间对齐方法（字符，默认 \"Molo\"）plot_3D_width：3D可视化图像宽度（数值，默认 8.0）plot_3D_height：3D可视化图像高度（数值，默认 6.0）plot_3D_spot_size：3D图中点尺寸（数值，默认 0.5）dist_threshold：空间匹配最大距离阈值（数值，默认 5.0）pis_path：预计算对齐概率文件路径（可选，默认 NULL）sp_alignment_s：空间对齐正则化强度（数值，默认 0.7）use_harmony：是否启用Harmony整合校正（逻辑值，默认 FALSE）compute_iLISI：是否计算整合质量指标（逻辑值，默认 TRUE）edge_type：边连接类型（字符，默认 \"together\"）edge_sp：空间邻域边数量（整数，默认 10）edge_mtx：特征相似性边数量（整数，默认 10）hidden_dims：神经网络隐藏层维度（整数，默认 250）reduction_dims：潜在空间维度（整数，默认 30）mse_loss：均方误差损失权重（数值，默认 1.0）tri_loss：三元组损失权重（数值，默认 1.0）ggae_loss：图自编码器损失权重（数值，默认 1.0）cos_loss：余弦相似度损失权重（数值，默认 1.0）bce_loss：二值交叉熵损失权重（数值，默认 1.0）kl_loss：KL散度损失权重（数值，默认 1.0）K_h：相似性缩放超参数（数值，默认 5.0）verbose：是否显示进度信息（逻辑值，默认 TRUE）","code":""},{"path":"molo-函数.html","id":"返回值-6","chapter":"3 Molo 函数","heading":"3.7.3 返回值","text":"整合后的Molo对象。","code":""},{"path":"molo-函数.html","id":"基础示例-6","chapter":"3 Molo 函数","heading":"3.7.4 基础示例","text":"","code":"\nintegrated_obj <- Molo_Integrate(obj_list = list(molo1, molo2),\n                                 var_features = 3000)"},{"path":"基础流程.html","id":"基础流程","chapter":"4 基础流程","heading":"4 基础流程","text":"（下面提供各个数据集运行 Molo Pipeline 的全流程，复制代码运行即可复现网站中展示的全部结果；此外提供数据集的官方链接 & 打包好的molo对象，用户可自行选择进行下载）","code":""},{"path":"基础流程.html","id":"x-visium","chapter":"4 基础流程","heading":"4.1 10X Visium","text":"","code":""},{"path":"基础流程.html","id":"数据要求","chapter":"4 基础流程","heading":"4.1.1 数据要求","text":"用于 Molo Pipeline 的 10X Visium 数据需要包含 filtered_feature_bc_matrix.h5 文件和 spatial 文件夹，其中 spatial 文件夹中需要包含 scalefactors_json.json, tissue_lowres_image.png, tissue_positions_list.csv 三个文件。这些文件均由 Space Ranger 生成。下面是示例数据的文件结构树：","code":"visium\n├── filtered_feature_bc_matrix.h5\n└── spatial\n    ├── aligned_fiducials.jpg\n    ├── detected_tissue_image.jpg\n    ├── scalefactors_json.json\n    ├── tissue_hires_image.png\n    ├── tissue_lowres_image.png\n    └── tissue_positions_list.csv\n    "},{"path":"基础流程.html","id":"示例数据","chapter":"4 基础流程","heading":"4.1.2 示例数据","text":"您可以从此处下载公开的 10X Visium 数据。此外 Molo 还支持使用参考数据集进行细胞标签转移（可选），在此我们使用了 Seurat 格式的小鼠脑部参考数据作为示例，这里是对应的论文。","code":""},{"path":"基础流程.html","id":"标准流程","chapter":"4 基础流程","heading":"4.1.3 标准流程","text":"","code":"\nmolo_obj <- create_molo(\"Visium\", folder_path = \"./visium\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"mouse\",\n                          molo_env = \"/anaconda3/envs/Molo/\",\n                          plot_path = \"./plots/visium/\",\n                          labeled_ref = \"./ref/mouse_brain.rds\",\n                          run_Banksy = FALSE)"},{"path":"基础流程.html","id":"slide-seq-v1v2","chapter":"4 基础流程","heading":"4.2 Slide-seq v1/v2","text":"","code":""},{"path":"基础流程.html","id":"数据要求-1","chapter":"4 基础流程","heading":"4.2.1 数据要求","text":"用于 Molo Pipeline 的 Slide-seq 数据需要包含 raw_counts.csv.gz 和 spatial_info.csv.gz 文件。此外我们也支持 .tsv.gz, .txt.gz 等多种格式的数据。下面是示例数据的文件结构树：","code":"slide_seq\n├── raw_counts.csv.gz\n└── spatial_info.csv.gz"},{"path":"基础流程.html","id":"示例数据-1","chapter":"4 基础流程","heading":"4.2.2 示例数据","text":"您可以从此处下载公开的 Slide-seq 数据，也可以从此处下载公开的 Slide-seq v2 数据。（v2数据集还没来得及跑）","code":""},{"path":"基础流程.html","id":"标准流程-1","chapter":"4 基础流程","heading":"4.2.3 标准流程","text":"","code":"\nmolo_obj <- create_molo(\"Slide-seq\", folder_path = \"./slide_seq\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"mouse\",\n                          plot_path = \"./plots/slide_seq/\",\n                          labeled_ref = \"./ref/mouse_brain.rds\",\n                          run_Banksy = FALSE)"},{"path":"基础流程.html","id":"vizgen-merfish","chapter":"4 基础流程","heading":"4.3 Vizgen MERFISH","text":"","code":""},{"path":"基础流程.html","id":"数据要求-2","chapter":"4 基础流程","heading":"4.3.1 数据要求","text":"用于 Molo Pipeline 的 Vizgen MERFISH 数据需要包含 cell_by_gene.csv 文件和 cell_boundaries 文件夹，其中 cell_boundaries 文件夹包含若干个 **feature_data_*.hdf5** 文件。下面是示例数据的文件结构树：","code":"vizgen\n├── cell_boundaries\n│   ├── feature_data_0.hdf5\n│   ├── feature_data_1.hdf5\n│   ├── ...\n│   └── feature_data_1225.hdf5\n└── cell_by_gene.csv"},{"path":"基础流程.html","id":"示例数据-2","chapter":"4 基础流程","heading":"4.3.2 示例数据","text":"您可以从此处下载公开的 Vizgen MERFISH 数据。","code":""},{"path":"基础流程.html","id":"标准流程-2","chapter":"4 基础流程","heading":"4.3.3 标准流程","text":"","code":"\nmolo_obj <- create_molo(\"MERFISH\", folder_path = \"./merfish\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"mouse\",\n                          plot_path = \"./plots/vizgen/\",\n                          labeled_ref = \"./ref/mouse_brain.rds\",\n                          run_Banksy = FALSE)"},{"path":"基础流程.html","id":"nanostring-cosmx","chapter":"4 基础流程","heading":"4.4 Nanostring CosMx","text":"","code":""},{"path":"基础流程.html","id":"数据要求-3","chapter":"4 基础流程","heading":"4.4.1 数据要求","text":"用于 Molo Pipeline 的 Slide-seq v2 数据需要包含若干文件。下面是示例数据的文件结构树：","code":"cosmx\n├── Run5642_S3_Quarter_exprMat_file.csv\n├── Run5642_S3_Quarter_fov_positions_file.csv\n├── Run5642_S3_Quarter_metadata_file.csv\n├── Run5642_S3_Quarter-polygons.csv\n└── Run5642_S3_Quarter_tx_file.csv"},{"path":"基础流程.html","id":"示例数据-3","chapter":"4 基础流程","heading":"4.4.2 示例数据","text":"您可以从此处下载公开的 nanostring CosMx 数据。","code":""},{"path":"基础流程.html","id":"标准流程-3","chapter":"4 基础流程","heading":"4.4.3 标准流程","text":"","code":"\nmolo_obj <- create_molo(\"CosMx\", folder_path = \"./cosmx\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"human\",\n                          plot_path = \"./plots/cosmx/\",\n                          labeled_ref = NULL,\n                          run_Banksy = FALSE)"},{"path":"基础流程.html","id":"x-xenium","chapter":"4 基础流程","heading":"4.5 10X Xenium","text":"","code":""},{"path":"基础流程.html","id":"数据要求-4","chapter":"4 基础流程","heading":"4.5.1 数据要求","text":"参考示例数据。","code":""},{"path":"基础流程.html","id":"示例数据-4","chapter":"4 基础流程","heading":"4.5.2 示例数据","text":"您可以从此处下载公开的 10X Xenium 数据。","code":""},{"path":"基础流程.html","id":"标准流程-4","chapter":"4 基础流程","heading":"4.5.3 标准流程","text":"","code":"\nmolo_obj <- create_molo(\"Xenium\", folder_path = \"./xenium\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"mouse\",\n                          plot_path = \"./plots/xenium/\",\n                          labeled_ref = \"./ref/mouse_brain.rds\",\n                          run_Banksy = FALSE)"},{"path":"基础流程.html","id":"spatial-atac-seq","chapter":"4 基础流程","heading":"4.6 spatial ATAC-seq","text":"","code":""},{"path":"基础流程.html","id":"预处理","chapter":"4 基础流程","heading":"4.6.1 预处理","text":"1）在 NCBI 下载 SRA 数据并解压；2）根据提示填写 config.yaml，注意请不要修改除 config.yaml 外的任何文件；3）在终端运行 snakemake --configfile config.yaml；4）在指定的输出目录中查看 fragments.tsv.gz 及其他输出文件。Tip: 预处理时需要自行安装 CelllRanger ATAC，并将安装路径按照提示填入 config.yaml .","code":""},{"path":"基础流程.html","id":"数据要求-5","chapter":"4 基础流程","heading":"4.6.2 数据要求","text":"用于 Molo Pipeline 的 Slide-seq v2 数据需要包含 fragments.tsv.gz 文件和 spatial 文件夹，其中 spatial 文件夹中包含 scalefactors_json.json, tissue_lowres_image.png, tissue_positions_list.csv 三个文件。下面是示例数据的文件结构树：","code":"sp_ATAC\n├── fragments.tsv.gz\n└── spatial\n    ├── scalefactors_json.json\n    ├── tissue_lowres_image.png\n    └── tissue_positions_list.csv"},{"path":"基础流程.html","id":"示例数据-5","chapter":"4 基础流程","heading":"4.6.3 示例数据","text":"您可以从此处下载公开的 spatial ATAC-seq 数据。","code":""},{"path":"基础流程.html","id":"标准流程-5","chapter":"4 基础流程","heading":"4.6.4 标准流程","text":"","code":"\nmolo_obj <- create_molo(\"ATAC\", folder_path = \"./atac\", ATAC_dataset = \"mouse\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"mouse\",\n                          plot_path = \"./plots/atac/\",\n                          labeled_ref = \"./ref/mouse_brain.rds\",\n                          run_Banksy = FALSE)"},{"path":"基础流程.html","id":"codex","chapter":"4 基础流程","heading":"4.7 CODEX","text":"","code":""},{"path":"基础流程.html","id":"数据要求-6","chapter":"4 基础流程","heading":"4.7.1 数据要求","text":"参考示例数据。","code":""},{"path":"基础流程.html","id":"示例数据-6","chapter":"4 基础流程","heading":"4.7.2 示例数据","text":"您可以从此处下载公开的 Akoya CODEX 数据，这是该数据的描述。","code":""},{"path":"基础流程.html","id":"标准流程-6","chapter":"4 基础流程","heading":"4.7.3 标准流程","text":"","code":"\nmolo_obj <- create_molo(\"CODEX\", folder_path = \"./codex\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"human\",\n                          plot_path = \"./plots/codex/\",\n                          labeled_ref = NULL,\n                          run_Banksy = FALSE)"},{"path":"基础流程.html","id":"stereo-seq","chapter":"4 基础流程","heading":"4.8 Stereo-seq","text":"","code":""},{"path":"基础流程.html","id":"数据要求-7","chapter":"4 基础流程","heading":"4.8.1 数据要求","text":"参考示例数据。","code":""},{"path":"基础流程.html","id":"示例数据-7","chapter":"4 基础流程","heading":"4.8.2 示例数据","text":"您可以从此处下载公开的 Stereo-seq 数据。","code":""},{"path":"基础流程.html","id":"标准流程-7","chapter":"4 基础流程","heading":"4.8.3 标准流程","text":"","code":"\nmolo_obj <- create_molo(\"Stereo-seq\", folder_path = \"./stereo_seq/\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"mouse\",\n                          plot_path = \"./plots/stereo_seq/\",\n                          labeled_ref = NULL,\n                          run_Banksy = FALSE)"},{"path":"基础流程.html","id":"custom","chapter":"4 基础流程","heading":"4.9 Custom","text":"","code":""},{"path":"基础流程.html","id":"数据要求-8","chapter":"4 基础流程","heading":"4.9.1 数据要求","text":"用于 Molo Pipeline 的 CODEX 数据需要包含matrix.parquet，此外还有部分可选项。下面是示例数据的文件结构树：Tip: 由于 matrix 和 embedding 数据量往往很大，为了提高 /O 效率，我们使用了 parquet 而非传统的 csv。您可以使用 R 语言的 arrow 包或 python 的 pandas包中的 to_parquet(engine = ‘pyarrow’) 创建 parquet 文件。","code":"custom\n├── matrix.parquet\n├── embedding.parquet(optional)\n├── umap.parquet(optional)\n├── meta.csv(optional)\n└── spatial.csv(optional)"},{"path":"基础流程.html","id":"示例数据-8","chapter":"4 基础流程","heading":"4.9.2 示例数据","text":"您可以从此处下载基于DLPFC数据集生成的 Custom 数据。","code":""},{"path":"基础流程.html","id":"标准流程-8","chapter":"4 基础流程","heading":"4.9.3 标准流程","text":"","code":"\nmolo_obj <- create_molo(\"Custom\", folder_path = \"./custom/\")\n\nmolo_obj <- Molo_Pipeline(molo_obj,\n                          nCount_range = c(10,2000),\n                          nFeature_range = c(10,2000),\n                          dataset = \"mouse\",\n                          plot_path = \"./plots/custom/\",\n                          labeled_ref = NULL,\n                          run_Banksy = FALSE)"},{"path":"web-page.html","id":"web-page","chapter":"5 Web Page","heading":"5 Web Page","text":"Molo Pipeline 提供了一个基于Shiny的在线分析平台，用户可以在本地部署该平台，并通过网页界面进行数据分析和结果展示。","code":""},{"path":"web-page.html","id":"molo_web","chapter":"5 Web Page","heading":"5.1 Molo_web","text":"您可以使用 Molo_web 函数在本地快速部署该网页，进行数据分析和结果展示。下面是 Molo_web 的参数介绍：Tip: 所有数据需要按照页面提示 在data_path 中创建二级文件夹保存，如 10X Visium 数据的文件夹为 data_path/visium。直接保存在 data_path 下的数据是无效的!","code":""},{"path":"web-page.html","id":"web-page-安装","chapter":"5 Web Page","heading":"5.2 Web Page 安装","text":"","code":""},{"path":"web-page.html","id":"安装shiny-server","chapter":"5 Web Page","heading":"5.2.1 安装Shiny Server:","text":"","code":"sudo apt-get install shiny-server"},{"path":"web-page.html","id":"部署-molo-pipeline-web-app","chapter":"5 Web Page","heading":"5.2.2 部署 Molo Pipeline Web App:","text":"将Web App文件夹拷贝到Shiny Server的应用目录下，并启动服务：","code":"sudo cp -r web_app /srv/shiny-server/\nsudo systemctl restart shiny-server"},{"path":"web-page.html","id":"使用-web-page-运行-pipeline以10x-visium为例","chapter":"5 Web Page","heading":"5.3 使用 Web Page 运行 Pipeline（以10X Visium为例）","text":"","code":""},{"path":"web-page.html","id":"访问本地网页","chapter":"5 Web Page","heading":"5.3.1 访问本地网页:","text":"打开浏览器并访问 http://localhost:3838/web_app。网页加载后为如下界面：您可以(1)打开scRNA-seq Analyse菜单，(2)点击10X Visium（蓝色箭头所示），也可以(1)直接点击 Analyse Directly 跳转至10X Visium 分析（绿色箭头所示）。","code":""},{"path":"web-page.html","id":"设置参数","chapter":"5 Web Page","heading":"5.3.2 设置参数:","text":"打开分析后，按照侧边栏提示(1)放置数据文件、(2)设置参数，设置完成后点击(3)RUN按钮启动分析：","code":""},{"path":"web-page.html","id":"运行-molo-pipeline","chapter":"5 Web Page","heading":"5.3.3 运行 Molo Pipeline:","text":"点击RUN按钮后，按照提示确认运行 Molo Pipeline。运行过程中请不要进行任何操作，也不要关闭网页，避免出现不可预知的错误。运行可能会花费一段时间，这取决于您的服务器性能和数据集的大小。运行完成后，结果将在右侧展示。您可以(1)关闭侧边栏，(2)在菜单中选择查看分析结果：Tip: 如果分析结果中某张图依旧显示 Waiting Analysis，那么说明执行当前分析时没有得到可用的分析结果。您需要自行检查数据并进行探索性分析，或重新调整参数进行尝试。","code":""},{"path":"faq.html","id":"faq","chapter":"6 FAQ","heading":"6 FAQ","text":"","code":""},{"path":"faq.html","id":"docker-安装失败","chapter":"6 FAQ","heading":"6.1 Docker 安装失败","text":"问题: 拉取 Docker 镜像或运行 Docker 容器时出现报错。解决方法: 目前测试没有发现明显的异常。请您查阅 Docker 官方文档。如果依旧无法解决，请您将完整的环境信息及日志文件等保存下来，按照 问题反馈中的提示提交问题。","code":""},{"path":"faq.html","id":"run-按钮无法点击","chapter":"6 FAQ","heading":"6.2 RUN 按钮无法点击","text":"问题: 放置数据并设置参数后，RUN按钮依旧为灰色，无法点击。解决方法: 检查数据是否保存在 data_path 的指定文件夹中，文件夹中的数据是否完整并正确命名（参考[4 Basic Pipeline]中的数据要求）。检查数据无误后，重新勾选侧边栏 File Input 的选项进行数据确认，程序通过数据完整性检查后 RUN 按钮变为黄色，可以点击运行。","code":""},{"path":"faq.html","id":"网页部署","chapter":"6 FAQ","heading":"6.3 网页部署","text":"问题: 无法部署本地Web页面。解决方法: 确保Shiny Server已正确安装并启动，并且防火墙设置允许访问指定端口（默认3838）。","code":""},{"path":"faq.html","id":"问题反馈","chapter":"6 FAQ","heading":"6.4 问题反馈","text":"我们深知当前版本仍存在诸多需要完善之处。在此诚挚地向您表示歉意，并郑重承诺：问题响应机制\n对于使用过程中遇到的任何异常问题，您可通过 Github Issue 或 gyxu_123@163.com 获取快速且可靠的技术支持。建议您附上核心代码段与报错日志，以便我们快速复现并修复异常。问题响应机制对于使用过程中遇到的任何异常问题，您可通过 Github Issue 或 gyxu_123@163.com 获取快速且可靠的技术支持。建议您附上核心代码段与报错日志，以便我们快速复现并修复异常。修复承诺\n所有有效反馈将在24小时内获得初步响应，关键问题将建立专项追踪标签（Label）。我们会：\n✅ 认真考虑并讨论每一条异常和建议，并给出完整的反馈；\n✅ 优先处理影响核心流程的缺陷；\n✅ 定期发布修订版本，出现重大缺陷时尽快更新；\n✅ 在版本更新日志中公示修复进度及下一版本的更新预告。修复承诺所有有效反馈将在24小时内获得初步响应，关键问题将建立专项追踪标签（Label）。我们会：✅ 认真考虑并讨论每一条异常和建议，并给出完整的反馈；✅ 优先处理影响核心流程的缺陷；✅ 定期发布修订版本，出现重大缺陷时尽快更新；✅ 在版本更新日志中公示修复进度及下一版本的更新预告。共建计划\n特别鸣谢通过反馈帮助我们改进的开发者！所有被采纳的：共建计划特别鸣谢通过反馈帮助我们改进的开发者！所有被采纳的：有效Issue提交者数据异常复现案例提供者优化建议贡献者均将展示于项目的 Contributors 荣誉墙。此外我们欢迎您参与新版本的内测，并提出可行的改进建议。您的每一次反馈都是推动Molo进化的重要力量。我们承诺持续优化工具链稳定性，与社区共同推进空间组学技术的标准化进程！","code":""}]
